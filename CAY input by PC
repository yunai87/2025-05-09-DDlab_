#define ROW1 13
#define ROW2 12
#define ROW3 11
#define ROW4 10
#define ROW5 9
#define ROW6 8
#define ROW7 7
#define ROW8 6

#define COL1 5
#define COL2 4
#define COL3 3
#define COL4 A4
#define COL5 A3
#define COL6 A2
#define COL7 A1
#define COL8 A0

#define BUTTON 2
byte incomingByte;
const int row[] = {ROW1, ROW2, ROW3, ROW4, ROW5, ROW6, ROW7, ROW8};
const int col[] = {COL1,COL2, COL3, COL4, COL5, COL6, COL7, COL8};

int imgIndexNow = 0;
bool isPressing = false;

int circle[8][8] = {{1,1,1,1,1,1,1,1},
		           {1,0,1,1,1,1,0,1},
		           {1,0,0,1,1,0,0,1},
		           {1,1,0,0,0,0,1,1},
		           {1,1,1,0,0,1,1,1},
		           {1,1,1,0,0,1,1,1},
		           {1,1,1,0,0,1,1,1},
		           {1,1,1,0,0,1,1,1}};

int face[8][8] = {{1,1,1,1,1,1,1,1},
		          {1,1,0,0,0,0,1,1},
		          {1,0,1,1,1,1,0,1},
		          {1,1,1,1,1,1,0,1},
		          {1,0,0,0,1,1,0,1},
		          {1,0,0,1,1,1,0,1},
		          {1,0,1,0,0,0,1,1},
		          {1,1,1,1,1,1,1,1}};

int face2[8][8] = {{1,1,1,1,1,1,1,1},
		          {1,0,0,1,1,0,0,1},
		          {1,0,0,1,1,0,0,1},
		          {1,1,1,1,1,1,1,1},
		          {1,0,1,1,1,1,0,1},
		          {1,0,1,1,1,1,0,1},
		          {1,0,0,0,0,0,0,1},
		          {1,1,1,1,1,1,1,1}};

int all[8][8] = {{0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0},
		         {0,0,0,0,0,0,0,0}};

int H[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,1,1,1,1,1,1}};

int A[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,1,0,0,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,1,1,1,1,1,1}};

int P[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,0,0,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,0,0,1,1,1},
		       {1,1,0,1,1,1,1,1},
		       {1,1,0,1,1,1,1,1},
		       {1,1,1,1,1,1,1,1}};

int Y[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,1,0,0,1,1,1},
		       {1,1,1,0,0,1,1,1},
		       {1,1,1,0,0,1,1,1},
		       {1,1,1,1,1,1,1,1}};

int N[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,0,1,0,1,1},
		       {1,1,0,0,1,0,1,1},
		       {1,1,0,1,0,0,1,1},
		       {1,1,0,1,0,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,1,1,1,1,1,1}};

int E[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,1,1,1,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,0,1,1,1,1,1},
		       {1,1,0,0,0,0,1,1},
		       {1,1,1,1,1,1,1,1}};

int W[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,0,1,1,1,1,0,1},
		       {1,0,1,1,1,1,0,1},
		       {1,0,1,1,1,1,0,1},
		       {1,0,1,0,0,1,0,1},
		       {1,0,1,0,0,1,0,1},
		       {1,0,0,0,0,0,0,1},
		       {1,1,1,1,1,1,1,1}};

int R[8][8] = {{1,1,1,1,1,1,1,1},
		       {1,1,0,0,0,1,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,1,1,0,1,1},
		       {1,1,0,0,0,1,1,1},
		       {1,1,0,1,0,1,1,1},
		       {1,1,0,1,0,0,1,1},
		       {1,1,1,1,1,1,1,1}};
void showPattern(byte pattern[8]);

void setup()
{
   Serial.begin(9600);
    for (byte i = 0; i <= sizeof(row); i++) {
        pinMode(row[i], OUTPUT);
    }
    for (byte i = 0; i <= sizeof(col); i++) {
        pinMode(col[i], OUTPUT);
    }

    pinMode(2, INPUT_PULLUP);
}

int (*currentPattern)[8] = A; // 預設圖案

void loop() {
  if (Serial.available() > 0) {
    incomingByte = Serial.read();
    switch (incomingByte) {
      case 'C': currentPattern = circle; break;
      case 'H': currentPattern = H; break;
      case 'A': currentPattern = A; break;
      // 更多圖案...
    }
  }

  // 按鈕切換圖案（可選功能）
  if (digitalRead(BUTTON) == LOW && !isPressing) {
    isPressing = true;
    imgIndexNow++;
    if (imgIndexNow > 2) imgIndexNow = 0;

    switch (imgIndexNow) {
      case 0: currentPattern = A; break;
      case 1: currentPattern = circle; break;
      case 2: currentPattern = face; break;
    }
  } else if (digitalRead(BUTTON) == HIGH && isPressing) {
    isPressing = false;
  }

  // 每次 loop 都刷新顯示
  lightup(currentPattern);
}


void lightup(int matrix[8][8]){
  for (int i=0; i<8; i++){
    digitalWrite(col[i], HIGH);
    for (int j = 0; j < 8; j++){
      digitalWrite(row[j], matrix[j][i]);
      delay(1);
    }
    for (int j = 0; j < 8; j++){
      digitalWrite(row[j], HIGH);
      //delay(1);
    }
    digitalWrite(col[i], LOW);
  }
}
